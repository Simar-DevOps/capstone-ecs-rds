name: terraform-ci-cd

on:
  pull_request:
    paths:
      - "infra/**"
  push:
    branches: ["main"]
    paths:
      - "infra/**"

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: infra
  AWS_ROLE_ARN: arn:aws:iam::935271781612:role/GitHubActionsTerraformRole

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init -backend-config=backend.hcl

      - name: Terraform Fmt
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -no-color -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra/tfplan

  apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init -backend-config=backend.hcl

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get ALB DNS
        id: tf_outputs
        run: echo "alb=$(terraform output -raw alb_dns_name)" >> "$GITHUB_OUTPUT"

      - name: Print ALB URL
        run: echo "ALB: http://${{ steps.tf_outputs.outputs.alb }}"
